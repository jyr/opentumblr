#!/usr/bin/env python
# -*- coding: us-ascii -*-
# generated by wxGlade 0.6.3 on Wed Jun 24 01:20:43 2009

import wx
import wx.richtext as rt

# begin wxGlade: extracode
# end wxGlade



class MyToolBar(wx.ToolBar):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyToolBar.__init__
        self.text_ctrl = kwds.pop('text_ctrl')
        wx.ToolBar.__init__(self, *args, **kwds)
        self.AddLabelTool(wx.ID_BOLD, "bold", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/bold.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddLabelTool(wx.ID_ITALIC, "Italic", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/italic.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddLabelTool(wx.NewId(), "strikethrough", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/strikethrough.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddSeparator()
        self.AddLabelTool(wx.NewId(), "Unordered list", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/unordered_list.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddLabelTool(wx.NewId(), "Ordered list", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/ordered_list.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddSeparator()
        self.AddLabelTool(11, "Indent", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/indent.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddLabelTool(12, "Outdent", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/outdent.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddSeparator()
        self.AddLabelTool(10, "Insert/Edit image", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/insert_image.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddLabelTool(wx.NewId(), "Insert/Edit link", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/insert_link.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddLabelTool(wx.NewId(), "Unlink", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/unlink.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddSeparator()
        self.AddLabelTool(wx.NewId(), "Spellchecker", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/spellchecker.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddSeparator()
        self.AddLabelTool(wx.NewId(), "Edit Html", wx.Bitmap("/Users/jyr/Desarrollo/git-projects/opentumblr/images/toolbar/insert_html.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        
        self.Bind(wx.EVT_TOOL, self.OnUpdateBold, id = wx.ID_BOLD)
        self.Bind(wx.EVT_TOOL, self.OnUpdateItalic, id = wx.ID_ITALIC)
        self.Bind(wx.EVT_TOOL, self.OnIndent, id = 11)
        self.Bind(wx.EVT_TOOL, self.OnOutdent, id =12)
        self.Bind(wx.EVT_TOOL, self.OnInsertImage, id = 10)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyToolBar.__set_properties
        self.Realize()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyToolBar.__do_layout
        pass
        # end wxGlade
        
    def OnUpdateBold(self, event):
        self.text_ctrl.ApplyBoldToSelection()
    
    def OnUpdateItalic(self, event):
        self.text_ctrl.ApplyItalicToSelection()
        
    def OnIndent(self, event):
        self.attr = rt.TextAttrEx()
        self.attr.SetFlags(rt.TEXT_ATTR_LEFT_INDENT)
        self.ip = self.text_ctrl.GetInsertionPoint()
        if self.text_ctrl.GetStyle(self.ip, self.attr):
            r = rt.RichTextRange(self.ip, self.ip)
            if self.text_ctrl.HasSelection():
                r = self.text_ctrl.GetSelectionRange()
                
        if self.attr.GetLeftIndent() >= 100:
            self.attr.SetLeftIndent(self.attr.GetLeftIndent() - 100)
            self.attr.SetFlags(rt.TEXT_ATTR_LEFT_INDENT)
            self.text_ctrl.SetStyle(r, self.attr)
    
    def OnOutdent(self, event):
        self.attr = rt.TextAttrEx()
        self.attr.SetLeftIndent(self.attr.GetLeftIndent()+100)
        self.attr.SetFlags(rt.TEXT_ATTR_LEFT_INDENT)
        self.ip = self.text_ctrl.GetInsertionPoint()
        if self.text_ctrl.GetStyle(self.ip, self.attr):
            r = rt.RichTextRange(self.ip, self.ip)

        self.attr.SetLeftIndent(self.attr.GetLeftIndent() + 100)
        self.attr.SetFlags(rt.TEXT_ATTR_LEFT_INDENT)
        self.text_ctrl.SetStyle(r, self.attr)
            
    def OnInsertImage(self, event):
        self.text_ctrl.WriteImage()

# end of class MyToolBar


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        #self.text_ctrl_1 = wx.TextCtrl(self, -1, "")
        self.text_ctrl_1 = rt.RichTextCtrl(self, -1, "")
        self.toolbar = MyToolBar(self, text_ctrl = self.text_ctrl_1)
        

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame_1")
        self.text_ctrl_1.SetMinSize((300,200))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.toolbar, 0, wx.EXPAND|wx.ALL, 6)
        sizer_1.Add(self.text_ctrl_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

# end of class MyFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()