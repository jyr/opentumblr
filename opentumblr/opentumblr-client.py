#!/usr/bin/env python
# -*- coding: us-ascii -*-
import urllib2

# generated by wxGlade 0.6.3 on Sat May 23 03:52:10 2009

import wx
try:
    import tumblr
    from tumblr import Api
    from dashboard import Dashboard
    from invalid import Invalid
except ImportError:
    import opentumblr.tumblr
    from opentumblr.tumblr import Api
    from opentumblr.dashboard import Dashboard
    from opentumblr.invalid import Invalid


# begin wxGlade: extracode
# end wxGlade

errors = {'403':'Login o password incorrectos','404':'Tumblrlog incorrecto','urlopen':'no ingreso su tumblrlog'}

class Login(wx.Frame):
    def __init__(self, parent, id):
        # begin wxGlade: Login.__init__
        #kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, parent, id, style=wx.DEFAULT_FRAME_STYLE ^(wx.MAXIMIZE_BOX))
        self.panel = wx.Panel(self, -1)
        self.panel_login = wx.Panel(self.panel, -1, style=wx.DOUBLE_BORDER|wx.TAB_TRAVERSAL)
        self.l_tumblr = wx.StaticText(self, -1, "Tumblr", style=wx.ALIGN_CENTRE)
        self.l_login = wx.StaticText(self.panel_login, -1, "Log in")
        self.l_mail = wx.StaticText(self.panel_login, -1, "E-mail address")
        self.tc_mail = wx.TextCtrl(self.panel_login, -1, "")
        self.l_password = wx.StaticText(self.panel_login, -1, "Password")
        self.tc_password = wx.TextCtrl(self.panel_login, -1, "", style=wx.TE_PASSWORD)
        self.l_blog = wx.StaticText(self.panel_login, -1, "Blog")
        self.tc_blog = wx.TextCtrl(self.panel_login, -1, "")
        self.b_login = wx.Button(self.panel_login, -1, "Login")

        self.Bind(wx.EVT_BUTTON, self.OnAuthTumblr, id = self.b_login.GetId())
        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: Login.__set_properties
        self.SetTitle("OpenTumblr")
        self.SetBackgroundColour(wx.Colour(55, 85, 113))
        self.SetForegroundColour(wx.Colour(55, 85, 113))
        self.l_tumblr.SetBackgroundColour(wx.Colour(55, 85, 113))
        self.l_tumblr.SetForegroundColour(wx.Colour(255, 255, 255))
        self.l_tumblr.SetFont(wx.Font(30, wx.SWISS, wx.NORMAL, wx.NORMAL, 0, ""))
        self.l_login.SetMinSize((74, 45))
        self.l_login.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.l_login.SetFont(wx.Font(25, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.l_mail.SetMinSize((260, 30))
        self.l_mail.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.l_mail.SetFont(wx.Font(20, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.tc_mail.SetMinSize((260, 30))
        self.tc_mail.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.tc_mail.SetFont(wx.Font(15, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.l_password.SetMinSize((260, 30))
        self.l_password.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.l_password.SetFont(wx.Font(20, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.tc_password.SetMinSize((260, 30))
        self.tc_password.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.tc_password.SetFont(wx.Font(15, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.l_blog.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.l_blog.SetFont(wx.Font(20, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.tc_blog.SetMinSize((260, 30))
        self.tc_blog.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.tc_blog.SetFont(wx.Font(15, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.panel_login.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.panel.SetBackgroundColour(wx.Colour(55, 85, 113))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Login.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer = wx.BoxSizer(wx.VERTICAL)
        sizer_login = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.l_tumblr, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_login.Add(self.l_login, 0, wx.ALL|wx.EXPAND, 5)
        sizer_login.Add(self.l_mail, 0, wx.ALL|wx.EXPAND, 10)
        sizer_login.Add(self.tc_mail, 0, wx.ALL|wx.EXPAND, 10)
        sizer_login.Add(self.l_password, 0, wx.ALL|wx.EXPAND, 10)
        sizer_login.Add(self.tc_password, 0, wx.ALL|wx.EXPAND, 10)
        sizer_login.Add(self.l_blog, 0, wx.ALL|wx.EXPAND, 10)
        sizer_login.Add(self.tc_blog, 0, wx.ALL|wx.EXPAND, 10)
        sizer_login.Add((30, 30), 0, wx.ALL|wx.EXPAND, 10)
        sizer_login.Add(self.b_login, 0, wx.ALL|wx.ALIGN_CENTER_HORIZONTAL, 10)
        self.panel_login.SetSizer(sizer_login)
        sizer.Add(self.panel_login, 1, wx.ALL|wx.EXPAND, 10)
        self.panel.SetSizer(sizer)
        sizer_1.Add(self.panel, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

# end of class Login
    def OnAuthTumblr(self, event):
    	self.Blog = self.tc_blog.GetValue()
    	#if not self.Blog:
    		#self.Blog = ''
    		#assert False,self.Blog
    		#print "Conectado al blog primario: "
    	self.User = self.tc_mail.GetValue()
    	self.Password = self.tc_password.GetValue()
    	
    	self.api = Api(self.Blog, self.User, self.Password)
    	#assert False,dir(self.api)
    	try:
			self.auth = self.api.auth_check()
			self.panel.Destroy()
			self.dashboard = Dashboard(self, -1)
    		#print "Te haz logueado"
    	except opentumblr.tumblr.TumblrAuthError:
    		self.invalid = Invalid(self)
    		self.invalid.Show()
    		print errors['403']
    	except urllib2.HTTPError:
    		print errors['404']
    	except urllib2.URLError:
    		print errors['urlopen']

if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    f_login = Login(None, -1)
    app.SetTopWindow(f_login)
    f_login.Show()
    app.MainLoop()
